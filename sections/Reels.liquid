<div class="rpc-section" data-section-id="{{ section.id }}">
  <div class="rpc-page-width">
    <div class="rpc-header">
      {% if section.settings.heading != blank %}
        <h2 class="rpc-heading">{{ section.settings.heading | escape }}</h2>
      {% endif %}
    </div>

    <!-- Swiper container -->
    <div class="rpc-swiper-container swiper">
      <div class="rpc-container swiper-wrapper">
        {%- for block in section.blocks -%}
          <div class="rpc-card swiper-slide" {{ block.shopify_attributes }}>
            <div class="rpc-card__video-wrapper">
              {%- if block.settings.video -%}
                <video
                  class="rpc-card__video"
                  src="{{ block.settings.video.sources[1].url }}"
                  muted
                  loop
                  playsinline
                  preload="metadata"
                  loading="lazy"
                  {% if block.settings.product.featured_image %}
                    poster="{{ block.settings.product.featured_image | image_url: width: 600 }}"
                  {% endif %}
                >
                  Your browser does not support the video tag.
                </video>
              {%- else -%}
                <div class="rpc-card__video-placeholder">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"></path></svg>
                </div>
              {%- endif -%}

              {%- if block.settings.video -%}
                <button type="button" class="rpc-card__sound-toggle" aria-label="Toggle sound">
                  <span class="rpc-sound-icon--on">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2"><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path></svg>
                  </span>
                  <span class="rpc-sound-icon--off">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2"><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line></svg>
                  </span>
                </button>
              {%- endif -%}

              {%- assign product = block.settings.product -%}
              {%- if product and product.compare_at_price > product.price -%}
                {%- assign sale_percentage = product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round -%}
                <div class="rpc-card__badge">{{ sale_percentage }}% OFF</div>
              {%- endif -%}

              {%- if block.settings.product -%}
                <a href="{{ product.url }}" class="rpc-card__product-thumb">
                  <img src="{{ product.featured_image | image_url: width: 120, height: 120, crop: 'center' }}" alt="{{ product.featured_image.alt | escape }}" loading="lazy" width="60" height="60">
                </a>
              {%- endif -%}
            </div>

            <div class="rpc-card__info">
              {%- if block.settings.product -%}
                <a href="{{ product.url }}" class="rpc-card__title">{{ product.title }}</a>
                <div class="rpc-card__price-wrapper">
                  <span class="rpc-card__price">{{ product.price | money }}</span>
                  {% if product.compare_at_price > product.price %}
                    <s class="rpc-card__compare-price">{{ product.compare_at_price | money }}</s>
                  {% endif %}
                </div>
                <div class="rpc-card__form">
                  <button
                    type="button"
                    class="rpc-card__button js-grid-cart"
                    data-id="{{ product.selected_or_first_available_variant.id }}"
                    aria-label="Add {{ product.title | escape }} to cart"
                    {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
                  >
                    <span class="rpc-card__button-text">
                      {%- if product.selected_or_first_available_variant.available -%}
                        Add to Cart
                      {%- else -%}
                        Sold Out
                      {%- endif -%}
                    </span>
                    <div class="rpc-card__loader"></div>
                  </button>
                </div>
              {%- else -%}
                <p class="rpc-card__title">Product Title</p>
                <p class="rpc-card__price">{{ 29900 | money }}</p>
                <button type="button" class="rpc-card__button" disabled>Add to Cart</button>
              {%- endif -%}
            </div>
          </div>
        {%- endfor -%}
      </div>

      <!-- Swiper Navigation Buttons -->
      <div class="rpc-swiper-button-prev swiper-button-prev"></div>
      <div class="rpc-swiper-button-next swiper-button-next"></div>
    </div>
  </div>
</div>

<style>
  {% comment %} Include styles from your original CSS â€” shortened here for space {% endcomment %}
  .rpc-section {
    padding: 40px 0;
    background: #fff;
  }

  .rpc-page-width {
    max-width: 1400px;
    margin: auto;
    padding: 0 20px;
  }

  .rpc-heading {
    font-size: 32px;
    text-align: center;
    margin-bottom: 20px;
  }

  .rpc-card {
    width: 260px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
  }

  .rpc-card__video-wrapper {
    position: relative;
    padding-top: 177.77%;
    background: #eee;
    border-radius: 8px;
    overflow: hidden;
  }

  .rpc-card__video,
  .rpc-card__video-placeholder {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    object-fit: cover;
  }

  .rpc-card__sound-toggle {
    position: absolute;
    top: 12px; left: 12px;
    width: 32px; height: 32px;
    background: rgba(0,0,0,0.4);
    color: #fff;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .rpc-card__sound-toggle .rpc-sound-icon--on { display: none; }
  .rpc-card__sound-toggle .rpc-sound-icon--off { display: block; }
  .rpc-card__sound-toggle.is-unmuted .rpc-sound-icon--on { display: block; }
  .rpc-card__sound-toggle.is-unmuted .rpc-sound-icon--off { display: none; }

  .rpc-card__badge {
    position: absolute;
    top: 12px; right: 12px;
    background: red;
    color: white;
    font-size: 12px;
    padding: 4px 6px;
    border-radius: 4px;
  }

  .rpc-card__product-thumb {
    position: absolute;
    bottom: 12px; left: 12px;
    width: 60px; height: 60px;
    background: #fff;
    border-radius: 6px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .rpc-card__info {
    margin-top: 10px;
  }

  .rpc-card__title {
    font-size: 14px;
    color: #000;
    text-decoration: none;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
  }

  .rpc-card__price-wrapper {
    display: flex;
    gap: 8px;
    margin: 5px 0;
  }

  .rpc-card__button {
    background: black;
    color: white;
    border: 1px solid black;
    padding: 8px;
    font-size: 14px;
    cursor: pointer;
    border-radius: 4px;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .rpc-card__loader {
    display: none;
    width: 18px; height: 18px;
    border: 2px solid rgba(255,255,255,0.4);
    border-top: 2px solid white;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  .rpc-card__button.is-loading .rpc-card__button-text { display: none; }
  .rpc-card__button.is-loading .rpc-card__loader { display: block; }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }
</style>

<script>
  class RealPeopleVideoCarousel {
    constructor(section) {
      this.section = section;
      this.container = section.querySelector('.rpc-swiper-container');
      if (!this.container || typeof Swiper === 'undefined') return;

      this.cards = section.querySelectorAll('.rpc-card');
      this.activeVideo = null;

      this.init();
    }

    init() {
      new Swiper(this.container, {
        slidesPerView: 'auto',
        spaceBetween: 15,
        navigation: {
          nextEl: this.section.querySelector('.rpc-swiper-button-next'),
          prevEl: this.section.querySelector('.rpc-swiper-button-prev')
        }
      });
      this.initVideos();
      this.initCartButtons();
    }

    initVideos() {
      this.cards.forEach(card => {
        const video = card.querySelector('video');
        const toggle = card.querySelector('.rpc-card__sound-toggle');
        const wrapper = card.querySelector('.rpc-card__video-wrapper');
        if (!video) return;

        wrapper.addEventListener('mouseenter', () => {
          if (this.activeVideo && this.activeVideo !== video) this.activeVideo.pause();
          video.play();
          this.activeVideo = video;
        });

        wrapper.addEventListener('mouseleave', () => {
          video.pause();
          if (this.activeVideo === video) this.activeVideo = null;
        });

        if (toggle) {
          toggle.addEventListener('click', (e) => {
            e.stopPropagation();
            video.muted = !video.muted;
            toggle.classList.toggle('is-unmuted', !video.muted);
          });
        }
      });
    }

    initCartButtons() {
      this.cards.forEach(card => {
        const btn = card.querySelector('.js-grid-cart');
        if (!btn) return;

        btn.addEventListener('click', async () => {
          if (btn.disabled) return;
          btn.classList.add('is-loading');
          const id = btn.dataset.id;

          try {
            const res = await fetch('/cart/add.js', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id, quantity: 1 })
            });

            if (!res.ok) throw new Error('Add to cart failed');
            document.dispatchEvent(new CustomEvent('cart:updated'));

            const drawer = document.querySelector('cart-drawer, cart-notification');
            if (drawer?.renderContents) {
              const cart = await fetch('/cart.js').then(r => r.json());
              drawer.renderContents(cart);
              if ('open' in drawer) drawer.open = true;
            }

          } catch (e) {
            alert('Could not add to cart.');
          } finally {
            btn.classList.remove('is-loading');
          }
        });
      });
    }
  }

  const sectionId = '{{ section.id }}';
  const selector = `.rpc-section[data-section-id="${sectionId}"]`;

  const initVideoCarousel = () => {
    const section = document.querySelector(selector);
    if (section) new RealPeopleVideoCarousel(section);
  };

  document.addEventListener('DOMContentLoaded', initVideoCarousel);
  document.addEventListener('shopify:section:load', (e) => {
    if (e.target.matches(selector)) initVideoCarousel();
  });
</script>

{% schema %}
{
  "name": "Video Carousel",
  "tag": "section",
  "class": "shopify-section--video-carousel",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "REAL PEOPLE REAL RESULTS"
    }
  ],
  "blocks": [
    {
      "type": "video_item",
      "name": "Video Item",
      "limit": 12,
      "settings": [
        {
          "type": "video",
          "id": "video",
          "label": "Video"
        },
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Carousel",
      "blocks": [
        { "type": "video_item" },
        { "type": "video_item" },
        { "type": "video_item" }
      ]
    }
  ]
}
{% endschema %}

